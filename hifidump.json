{
    "Account":{
        "functions":[
            "checkAndSignalForAccessToken()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getInstance()",
            "getUsername()",
            "isLoggedIn()",
            "objectNameChanged(QString)",
            "usernameChanged()"
        ],
        "vars":[
            "objectName",
            "username"
        ]
    },
    "AnimationCache":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "dirty()",
            "getAnimation(QString)",
            "getAnimation(QUrl)",
            "getResource(QUrl)",
            "getResource(QUrl,QUrl)",
            "getResource(QUrl,QUrl,void*)",
            "getResourceList()",
            "objectNameChanged(QString)",
            "prefetch(QUrl)",
            "prefetch(QUrl,void*)",
            "updateTotalSize(qlonglong)"
        ],
        "vars":[
            "numCached",
            "numTotal",
            "objectName",
            "sizeCached",
            "sizeTotal"
        ]
    },
    "ArrayBuffer":{
        "vars":[
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Assets":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "downloadData(QString,QScriptValue)",
            "objectNameChanged(QString)",
            "setMapping(QString,QString,QScriptValue)",
            "uploadData(QString,QScriptValue)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Audio":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "disconnected()",
            "environmentMuted()",
            "mutedByMixer()",
            "objectNameChanged(QString)",
            "playSound(SharedSoundPointer)",
            "playSound(SharedSoundPointer,AudioInjectorOptions)",
            "receivedFirstPacket()",
            "setStereoInput(bool)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "AudioDevice":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "deviceChanged()",
            "getDefaultInputDevice()",
            "getDefaultOutputDevice()",
            "getInputDevice()",
            "getInputDevices()",
            "getInputVolume()",
            "getMuted()",
            "getOutputDevice()",
            "getOutputDevices()",
            "muteToggled()",
            "objectNameChanged(QString)",
            "setInputDevice(QString)",
            "setInputVolume(float)",
            "setOutputDevice(QString)",
            "setReverb(bool)",
            "setReverbOptions(const AudioEffectOptions*)",
            "toggleMute()"
        ],
        "vars":[
            "objectName"
        ]
    },
    "AudioEffectOptions":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "AudioStats":{
        "functions":[
            "clientStreamChanged()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "injectorStreamsChanged()",
            "inputReadMsMaxChanged(float)",
            "inputUnplayedMsMaxChanged(float)",
            "mixerStreamChanged()",
            "objectNameChanged(QString)",
            "outputUnplayedMsMaxChanged(float)",
            "pingMsChanged(float)",
            "sentTimegapMsAvgChanged(qulonglong)",
            "sentTimegapMsAvgWindowChanged(qulonglong)",
            "sentTimegapMsMaxChanged(qulonglong)",
            "sentTimegapMsMaxWindowChanged(qulonglong)"
        ],
        "vars":[
            "clientStream",
            "injectorStreams",
            "inputReadMsMax",
            "inputUnplayedMsMax",
            "mixerStream",
            "objectName",
            "outputUnplayedMsMax",
            "pingMs",
            "sentTimegapMsAvg",
            "sentTimegapMsAvgWindow",
            "sentTimegapMsMax",
            "sentTimegapMsMaxWindow"
        ]
    },
    "AvatarList":{
        "events":[
            "avatarAddedEvent(QUuid)",
            "avatarRemovedEvent(QUuid)",
            "avatarSessionChangedEvent(QUuid,QUuid)"
        ],
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "findRayIntersection(PickRay)",
            "findRayIntersection(PickRay,QScriptValue)",
            "findRayIntersection(PickRay,QScriptValue,QScriptValue)",
            "getAvatar(QUuid)",
            "getAvatarIdentifiers()",
            "getLocalLights()",
            "isAvatarInRange(glm::vec3,float)",
            "objectNameChanged(QString)",
            "setLocalLights(QVector<AvatarManager::LocalLight>)",
            "setShouldShowReceiveStats(bool)",
            "updateAvatarRenderStatus(bool)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "AvatarManager":{
        "events":[
            "avatarAddedEvent(QUuid)",
            "avatarRemovedEvent(QUuid)",
            "avatarSessionChangedEvent(QUuid,QUuid)"
        ],
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "findRayIntersection(PickRay)",
            "findRayIntersection(PickRay,QScriptValue)",
            "findRayIntersection(PickRay,QScriptValue,QScriptValue)",
            "getAvatar(QUuid)",
            "getAvatarIdentifiers()",
            "getLocalLights()",
            "isAvatarInRange(glm::vec3,float)",
            "objectNameChanged(QString)",
            "setLocalLights(QVector<AvatarManager::LocalLight>)",
            "setShouldShowReceiveStats(bool)",
            "updateAvatarRenderStatus(bool)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Camera":{
        "functions":[
            "computePickRay(float,float)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getCameraEntity()",
            "getModeString()",
            "getOrientation()",
            "getPosition()",
            "keepLookingAt(glm::vec3)",
            "lookAt(glm::vec3)",
            "modeUpdated(QString)",
            "objectNameChanged(QString)",
            "setCameraEntity(QUuid)",
            "setModeString(QString)",
            "setOrientation(glm::quat)",
            "setPosition(glm::vec3)",
            "stopLooking()"
        ],
        "vars":[
            "cameraEntity",
            "frustum",
            "mode",
            "objectName",
            "orientation",
            "position"
        ]
    },
    "Clipboard":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "exportEntities(QString,QVector<EntityItemID>)",
            "exportEntities(QString,float,float,float,float)",
            "getClipboardContentsLargestDimension()",
            "getContentsDimensions()",
            "importEntities(QString)",
            "objectNameChanged(QString)",
            "pasteEntities(glm::vec3)",
            "readyToImport()"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Controller":{
        "events":[
            "actionEndEvent(HFActionEvent)",
            "actionEvent(int,float)",
            "actionStartEvent(HFActionEvent)",
            "backEndEvent()",
            "backStartEvent()",
            "inputEvent(int,float)",
            "keyPressEvent(KeyEvent)",
            "keyReleaseEvent(KeyEvent)",
            "mouseDoublePressEvent(MouseEvent)",
            "mouseMoveEvent(MouseEvent)",
            "mousePressEvent(MouseEvent)",
            "mouseReleaseEvent(MouseEvent)",
            "touchBeginEvent(TouchEvent)",
            "touchEndEvent(TouchEvent)",
            "touchUpdateEvent(TouchEvent)",
            "wheelEvent(WheelEvent)"
        ],
        "functions":[
            "captureActionEvents()",
            "captureJoystick(int)",
            "captureKeyEvents(KeyEvent)",
            "captureMouseEvents()",
            "captureTouchEvents()",
            "captureWheelEvents()",
            "createInputController(QString,QString)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "disableMapping(QString)",
            "enableMapping(QString)",
            "enableMapping(QString,bool)",
            "findAction(QString)",
            "findDevice(QString)",
            "getActionNames()",
            "getActionValue(int)",
            "getActions()",
            "getAllActions()",
            "getAvailableInputs(uint)",
            "getAxisValue(StandardAxisChannel)",
            "getAxisValue(StandardAxisChannel,uint16_t)",
            "getAxisValue(int)",
            "getButtonValue(StandardButtonChannel)",
            "getButtonValue(StandardButtonChannel,uint16_t)",
            "getDeviceName(uint)",
            "getDeviceNames()",
            "getHardware()",
            "getPoseValue(StandardPoseChannel)",
            "getPoseValue(StandardPoseChannel,uint16_t)",
            "getPoseValue(int)",
            "getRecommendedOverlayRect()",
            "getStandard()",
            "getValue(int)",
            "getViewportDimensions()",
            "hardwareChanged()",
            "loadMapping(QString)",
            "newMapping()",
            "newMapping(QString)",
            "objectNameChanged(QString)",
            "parseMapping(QString)",
            "releaseActionEvents()",
            "releaseInputController(controller::InputController*)",
            "releaseJoystick(int)",
            "releaseKeyEvents(KeyEvent)",
            "releaseMouseEvents()",
            "releaseTouchEvents()",
            "releaseWheelEvents()",
            "triggerHapticPulse(float,float)",
            "triggerHapticPulse(float,float,controller::Hand)",
            "triggerHapticPulseOnDevice(uint,float,float)",
            "triggerHapticPulseOnDevice(uint,float,float,controller::Hand)",
            "triggerShortHapticPulse(float)",
            "triggerShortHapticPulse(float,controller::Hand)",
            "triggerShortHapticPulseOnDevice(uint,float)",
            "triggerShortHapticPulseOnDevice(uint,float,controller::Hand)"
        ],
        "vars":[
            "Actions",
            "Hardware",
            "Standard",
            "objectName"
        ]
    },
    "DataView":{
        "vars":[
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Desktop":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)",
            "setOverlayAlpha(float)",
            "show(QString,QString)"
        ],
        "vars":[
            "height",
            "objectName",
            "width"
        ]
    },
    "DialogsManager":{
        "functions":[
            "addressBarShown(bool)",
            "addressBarToggled()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)",
            "showFeed()",
            "toggleAddressBar()"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Entities":{
        "events":[
            "emitScriptEvent(EntityItemID,QVariant)",
            "webEventReceived(EntityItemID,QVariant)"
        ],
        "functions":[
            "addAction(QString,QUuid,QVariantMap)",
            "addEntity(EntityItemProperties)",
            "addEntity(EntityItemProperties,bool)",
            "addModelEntity(QString,QString,QString,bool,glm::vec3,glm::vec3)",
            "addingEntity(EntityItemID)",
            "appendPoint(QUuid,glm::vec3)",
            "callEntityMethod(QUuid,QString)",
            "callEntityMethod(QUuid,QString,QStringList)",
            "canAdjustLocks()",
            "canAdjustLocksChanged(bool)",
            "canRez()",
            "canRezChanged(bool)",
            "canRezTmp()",
            "canRezTmpChanged(bool)",
            "canWriteAssets()",
            "canWriteAssetsChanged(bool)",
            "clearingEntities()",
            "clickDownOnEntity(EntityItemID,PointerEvent)",
            "clickReleaseOnEntity(EntityItemID,PointerEvent)",
            "collisionWithEntity(EntityItemID,EntityItemID,Collision)",
            "debitEnergySource(float)",
            "deleteAction(QUuid,QUuid)",
            "deleteEntity(QUuid)",
            "deleteLater()",
            "deletingEntity(EntityItemID)",
            "destroyed()",
            "destroyed(QObject*)",
            "dumpTree()",
            "editEntity(QUuid,EntityItemProperties)",
            "enterEntity(EntityItemID)",
            "findClosestEntity(glm::vec3,float)",
            "findEntities(glm::vec3,float)",
            "findEntitiesInBox(glm::vec3,glm::vec3)",
            "findEntitiesInFrustum(QVariantMap)",
            "findRayIntersection(PickRay)",
            "findRayIntersection(PickRay,bool)",
            "findRayIntersection(PickRay,bool,QScriptValue)",
            "findRayIntersection(PickRay,bool,QScriptValue,QScriptValue)",
            "findRayIntersection(PickRay,bool,QScriptValue,QScriptValue,bool)",
            "findRayIntersection(PickRay,bool,QScriptValue,QScriptValue,bool,bool)",
            "findRayIntersectionBlocking(PickRay)",
            "findRayIntersectionBlocking(PickRay,bool)",
            "findRayIntersectionBlocking(PickRay,bool,QScriptValue)",
            "findRayIntersectionBlocking(PickRay,bool,QScriptValue,QScriptValue)",
            "getAbsoluteJointRotationInObjectFrame(QUuid,int)",
            "getAbsoluteJointTranslationInObjectFrame(QUuid,int)",
            "getActionArguments(QUuid,QUuid)",
            "getActionIDs(QUuid)",
            "getChildrenIDs(QUuid)",
            "getChildrenIDsOfJoint(QUuid,int)",
            "getDrawZoneBoundaries()",
            "getEntityProperties(QUuid)",
            "getEntityProperties(QUuid,EntityPropertyFlags)",
            "getJointIndex(QUuid,QString)",
            "getJointNames(QUuid)",
            "getKeyboardFocusEntity()",
            "getLifetimeBPS()",
            "getLifetimeBPSQueued()",
            "getLifetimeBytesQueued()",
            "getLifetimeBytesSent()",
            "getLifetimeInSeconds()",
            "getLifetimeInUsecs()",
            "getLifetimePPS()",
            "getLifetimePPSQueued()",
            "getLifetimePacketsQueued()",
            "getLifetimePacketsSent()",
            "getLightsArePickable()",
            "getLocalJointRotation(QUuid,int)",
            "getLocalJointTranslation(QUuid,int)",
            "getPacketsPerSecond()",
            "getZonesArePickable()",
            "hasPacketsToSend()",
            "holdingClickOnEntity(EntityItemID,PointerEvent)",
            "hoverEnterEntity(EntityItemID,PointerEvent)",
            "hoverLeaveEntity(EntityItemID,PointerEvent)",
            "hoverOverEntity(EntityItemID,PointerEvent)",
            "isChildOfParent(QUuid,QUuid)",
            "leaveEntity(EntityItemID)",
            "localCoordsToVoxelCoords(QUuid,glm::vec3)",
            "mouseMoveOnEntity(EntityItemID,PointerEvent)",
            "mousePressOnEntity(EntityItemID,PointerEvent)",
            "mouseReleaseOnEntity(EntityItemID,PointerEvent)",
            "objectNameChanged(QString)",
            "packetsToSendCount()",
            "sendClickDownOnEntity(QUuid,PointerEvent)",
            "sendClickReleaseOnEntity(QUuid,PointerEvent)",
            "sendHoldingClickOnEntity(QUuid,PointerEvent)",
            "sendHoverEnterEntity(QUuid,PointerEvent)",
            "sendHoverLeaveEntity(QUuid,PointerEvent)",
            "sendHoverOverEntity(QUuid,PointerEvent)",
            "sendMouseMoveOnEntity(QUuid,PointerEvent)",
            "sendMousePressOnEntity(QUuid,PointerEvent)",
            "sendMouseReleaseOnEntity(QUuid,PointerEvent)",
            "serversExist()",
            "setAbsoluteJointRotationInObjectFrame(QUuid,int,glm::quat)",
            "setAbsoluteJointTranslationInObjectFrame(QUuid,int,glm::vec3)",
            "setAllPoints(QUuid,QVector<glm::vec3>)",
            "setAllVoxels(QUuid,int)",
            "setDrawZoneBoundaries(bool)",
            "setKeyboardFocusEntity(QUuid)",
            "setLightsArePickable(bool)",
            "setLocalJointRotation(QUuid,int,glm::quat)",
            "setLocalJointRotations(QUuid,QVector<glm::quat>)",
            "setLocalJointTranslation(QUuid,int,glm::vec3)",
            "setLocalJointTranslations(QUuid,QVector<glm::vec3>)",
            "setLocalJointsData(QUuid,QVector<glm::quat>,QVector<glm::vec3>)",
            "setPacketsPerSecond(int)",
            "setVoxel(QUuid,glm::vec3,int)",
            "setVoxelSphere(QUuid,glm::vec3,float,int)",
            "setVoxelsInCuboid(QUuid,glm::vec3,glm::vec3,int)",
            "setZonesArePickable(bool)",
            "updateAction(QUuid,QUuid,QVariantMap)",
            "voxelCoordsToLocalCoords(QUuid,glm::vec3)",
            "voxelCoordsToWorldCoords(QUuid,glm::vec3)",
            "wantsHandControllerPointerEvents(QUuid)",
            "worldCoordsToVoxelCoords(QUuid,glm::vec3)"
        ],
        "vars":[
            "costMultiplier",
            "currentAvatarEnergy",
            "keyboardFocusEntity",
            "objectName"
        ]
    },
    "FaceTracker":{
        "functions":[
            "calibrate()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getMuted()",
            "muteToggled()",
            "objectNameChanged(QString)",
            "setEnabled(bool)",
            "toggleMute()"
        ],
        "vars":[
            "objectName"
        ]
    },
    "File":{
        "functions":[
            "convertUrlToPath(QUrl)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getTempDir()",
            "objectNameChanged(QString)",
            "runUnzip(QString,QUrl,bool)",
            "unzipResult(QString,QString,bool)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Float32Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Float64Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "GlobalServices":{
        "functions":[
            "connected()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "disconnected(QString)",
            "downloadInfoChanged(DownloadInfoResult)",
            "findableByChanged(QString)",
            "getDownloadInfo()",
            "myUsernameChanged(QString)",
            "objectNameChanged(QString)",
            "updateDownloadInfo()"
        ],
        "vars":[
            "findableBy",
            "objectName",
            "username"
        ]
    },
    "HMD":{
        "functions":[
            "IPDScaleChanged()",
            "calculateRayUICollisionPoint(glm::vec3,glm::vec3)",
            "centerUI()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "disableExtraLaser()",
            "disableHandLasers(int)",
            "displayModeChanged(bool)",
            "isHMDAvailable()",
            "isHMDAvailable(QString)",
            "isHandControllerAvailable()",
            "isHandControllerAvailable(QString)",
            "isKeyboardVisible()",
            "isSubdeviceContainingNameAvailable(QString)",
            "objectNameChanged(QString)",
            "overlayFromWorldPoint(glm::vec3)",
            "overlayToSpherical(glm::vec2)",
            "preferredAudioInput()",
            "preferredAudioOutput()",
            "requestHideHandControllers()",
            "requestShowHandControllers()",
            "setExtraLaser(glm::vec3,bool,glm::vec4,glm::vec3)",
            "setHandLasers(int,bool,glm::vec4,glm::vec3)",
            "shouldShowHandControllers()",
            "shouldShowHandControllersChanged()",
            "sphericalToOverlay(glm::vec2)",
            "suppressKeyboard()",
            "unsuppressKeyboard()",
            "worldPointFromOverlay(glm::vec2)"
        ],
        "vars":[
            "active",
            "eyeHeight",
            "getHUDLookAtPosition2D",
            "getHUDLookAtPosition3D",
            "ipd",
            "ipdScale",
            "mounted",
            "objectName",
            "orientation",
            "playerHeight",
            "position"
        ]
    },
    "Int16Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Int32Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Int8Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "LODManager":{
        "functions":[
            "LODDecreased()",
            "LODIncreased()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getAutomaticLODAdjust()",
            "getBoundaryLevelAdjust()",
            "getDesktopLODDecreaseFPS()",
            "getDesktopLODIncreaseFPS()",
            "getHMDLODDecreaseFPS()",
            "getHMDLODIncreaseFPS()",
            "getLODDecreaseFPS()",
            "getLODFeedbackText()",
            "getLODIncreaseFPS()",
            "getOctreeSizeScale()",
            "objectNameChanged(QString)",
            "setAutomaticLODAdjust(bool)",
            "setBoundaryLevelAdjust(int)",
            "setDesktopLODDecreaseFPS(float)",
            "setHMDLODDecreaseFPS(float)",
            "setOctreeSizeScale(float)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Mat4":{
        "functions":[
            "createFromRotAndTrans(glm::quat,glm::vec3)",
            "createFromScaleRotAndTrans(glm::vec3,glm::quat,glm::vec3)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "extractRotation(glm::mat4)",
            "extractScale(glm::mat4)",
            "extractTranslation(glm::mat4)",
            "getFront(glm::mat4)",
            "getRight(glm::mat4)",
            "getUp(glm::mat4)",
            "inverse(glm::mat4)",
            "multiply(glm::mat4,glm::mat4)",
            "objectNameChanged(QString)",
            "print(QString,glm::mat4)",
            "transformPoint(glm::mat4,glm::vec3)",
            "transformVector(glm::mat4,glm::vec3)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Menu":{
        "events":[
            "menuItemEvent(QString)"
        ],
        "functions":[
            "addActionGroup(QString,QStringList)",
            "addActionGroup(QString,QStringList,QString)",
            "addMenu(QString)",
            "addMenu(QString,QString)",
            "addMenuItem(MenuItemProperties)",
            "addMenuItem(QString,QString)",
            "addMenuItem(QString,QString,QString)",
            "addSeparator(QString,QString)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "isMenuEnabled(QString)",
            "isOptionChecked(QString)",
            "menuExists(QString)",
            "menuItemExists(QString,QString)",
            "objectNameChanged(QString)",
            "removeActionGroup(QString)",
            "removeMenu(QString)",
            "removeMenuItem(QString,QString)",
            "removeSeparator(QString,QString)",
            "setIsOptionChecked(QString,bool)",
            "setMenuEnabled(QString,bool)",
            "triggerOption(QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Messages":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "init()",
            "messageReceived(QString,QString,QUuid,bool)",
            "objectNameChanged(QString)",
            "sendLocalMessage(QString,QString)",
            "sendMessage(QString,QString)",
            "sendMessage(QString,QString,bool)",
            "subscribe(QString)",
            "unsubscribe(QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "ModelCache":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "dirty()",
            "getResource(QUrl)",
            "getResource(QUrl,QUrl)",
            "getResource(QUrl,QUrl,void*)",
            "getResourceList()",
            "objectNameChanged(QString)",
            "prefetch(QUrl)",
            "prefetch(QUrl,void*)",
            "updateTotalSize(qlonglong)"
        ],
        "vars":[
            "numCached",
            "numTotal",
            "objectName",
            "sizeCached",
            "sizeTotal"
        ]
    },
    "MyAvatar":{
        "functions":[
            "addAnimationStateHandler(QScriptValue,QScriptValue)",
            "addThrust(glm::vec3)",
            "attach(QString)",
            "attach(QString,QString)",
            "attach(QString,QString,glm::vec3)",
            "attach(QString,QString,glm::vec3,glm::quat)",
            "attach(QString,QString,glm::vec3,glm::quat,float)",
            "attach(QString,QString,glm::vec3,glm::quat,float,bool)",
            "attach(QString,QString,glm::vec3,glm::quat,float,bool,bool)",
            "attach(QString,QString,glm::vec3,glm::quat,float,bool,bool,bool)",
            "audioListenerModeChanged()",
            "centerBody()",
            "clearAvatarEntity(QUuid)",
            "clearIKJointLimitHistory()",
            "clearJointData(QString)",
            "clearJointData(int)",
            "clearJointsData()",
            "clearScaleRestriction()",
            "collisionWithEntity(Collision)",
            "decreaseSize()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "detachAll(QString)",
            "detachAll(QString,QString)",
            "detachOne(QString)",
            "detachOne(QString,QString)",
            "energyChanged(float)",
            "getAbsoluteJointRotationInObjectFrame(int)",
            "getAbsoluteJointTranslationInObjectFrame(int)",
            "getAcceleration()",
            "getAnimGraphOverrideUrl()",
            "getAnimGraphUrl()",
            "getAnimationRoles()",
            "getAttachmentData()",
            "getAttachmentsVariant()",
            "getAvatarEntityData()",
            "getCharacterControllerEnabled()",
            "getClearOverlayWhenMoving()",
            "getControllerLeftHandMatrix()",
            "getControllerRightHandMatrix()",
            "getDefaultEyePosition()",
            "getDefaultJointRotation(int)",
            "getDefaultJointTranslation(int)",
            "getEnableMeshVisible()",
            "getEyePosition()",
            "getFullAvatarModelName()",
            "getFullAvatarURLFromPreferences()",
            "getHMDLeanRecenterEnabled()",
            "getHandState()",
            "getHeadDeltaPitch()",
            "getHeadFinalPitch()",
            "getHeadFinalRoll()",
            "getHeadFinalYaw()",
            "getHeadPosition()",
            "getJointIndex(QString)",
            "getJointNames()",
            "getJointPosition(QString)",
            "getJointPosition(int)",
            "getJointRotation(QString)",
            "getJointRotation(int)",
            "getJointRotations()",
            "getJointTranslation(QString)",
            "getJointTranslation(int)",
            "getLeftHandPose()",
            "getLeftHandPosition()",
            "getLeftHandTipPose()",
            "getLeftHandTipPosition()",
            "getLeftPalmPosition()",
            "getLeftPalmRotation()",
            "getNeckPosition()",
            "getOrientationForAudio()",
            "getOrientationVar()",
            "getParentID()",
            "getParentJointIndex()",
            "getPositionForAudio()",
            "getRightHandPose()",
            "getRightHandPosition()",
            "getRightHandTipPose()",
            "getRightHandTipPosition()",
            "getRightPalmPosition()",
            "getRightPalmRotation()",
            "getSensorToWorldMatrix()",
            "getShouldRender()",
            "getSkeletonOffset()",
            "getSnapTurn()",
            "getTargetAvatarPosition()",
            "getTargetScale()",
            "getThrust()",
            "getTrackedHeadPosition()",
            "goToLocation(QVariant)",
            "goToLocation(glm::vec3)",
            "goToLocation(glm::vec3,bool)",
            "goToLocation(glm::vec3,bool,glm::quat)",
            "goToLocation(glm::vec3,bool,glm::quat,bool)",
            "increaseSize()",
            "isJointDataValid(QString)",
            "isJointDataValid(int)",
            "newCollisionSoundURL(QUrl)",
            "objectNameChanged(QString)",
            "onLoadComplete()",
            "overrideAnimation(QString,float,bool,float,float)",
            "overrideRoleAnimation(QString,QString,float,bool,float,float)",
            "positionGoneTo()",
            "removeAnimationStateHandler(QScriptValue)",
            "resetSize()",
            "restoreAnimation()",
            "restoreRoleAnimation(QString)",
            "restrictScaleFromDomainSettings(QJsonObject)",
            "sendAvatarDataPacket()",
            "sendIdentityPacket()",
            "setAbsoluteJointRotationInObjectFrame(int,glm::quat)",
            "setAbsoluteJointTranslationInObjectFrame(int,glm::vec3)",
            "setAnimGraphOverrideUrl(QUrl)",
            "setAnimGraphUrl(QUrl)",
            "setAttachmentData(QVector<AttachmentData>)",
            "setAttachmentsVariant(QVariantList)",
            "setAvatarEntityData(AvatarEntityMap)",
            "setBlendshape(QString,float)",
            "setCharacterControllerEnabled(bool)",
            "setClearOverlayWhenMoving(bool)",
            "setEnableDebugDrawAnimPose(bool)",
            "setEnableDebugDrawDefaultPose(bool)",
            "setEnableDebugDrawHandControllers(bool)",
            "setEnableDebugDrawPosition(bool)",
            "setEnableDebugDrawSensorToWorldMatrix(bool)",
            "setEnableInverseKinematics(bool)",
            "setEnableMeshVisible(bool)",
            "setHMDLeanRecenterEnabled(bool)",
            "setHandState(char)",
            "setJointData(QString,glm::quat,glm::vec3)",
            "setJointData(int,glm::quat,glm::vec3)",
            "setJointMappingsFromNetworkReply()",
            "setJointRotation(QString,glm::quat)",
            "setJointRotation(int,glm::quat)",
            "setJointRotations(QVector<glm::quat>)",
            "setJointTranslation(QString,glm::vec3)",
            "setJointTranslation(int,glm::vec3)",
            "setJointTranslations(QVector<glm::vec3>)",
            "setModelURLFinished(bool)",
            "setOrientationVar(QVariant)",
            "setParentID(QUuid)",
            "setParentJointIndex(ushort)",
            "setRawJointData(QVector<JointData>)",
            "setSessionUUID(QUuid)",
            "setShouldDie()",
            "setSkeletonOffset(glm::vec3)",
            "setSnapTurn(bool)",
            "setThrust(glm::vec3)",
            "setUseAnimPreAndPostRotations(bool)",
            "transformChanged()",
            "updateAvatarEntity(QUuid,QByteArray)",
            "updateMotionBehaviorFromMenu()",
            "useFullAvatarURL(QUrl)",
            "useFullAvatarURL(QUrl,QString)"
        ],
        "vars":[
            "angularVelocity",
            "attachmentData",
            "audioAverageLoudness",
            "audioListenerMode",
            "audioListenerModeCamera",
            "audioListenerModeCustom",
            "audioListenerModeHead",
            "audioLoudness",
            "bodyPitch",
            "bodyRoll",
            "bodyYaw",
            "characterControllerEnabled",
            "collisionSoundURL",
            "controllerLeftHandMatrix",
            "controllerRightHandMatrix",
            "customListenOrientation",
            "customListenPosition",
            "displayName",
            "energy",
            "handPosition",
            "headOrientation",
            "headPitch",
            "headRoll",
            "headYaw",
            "hmdLeanRecenterEnabled",
            "jointNames",
            "leftHandPose",
            "leftHandPosition",
            "leftHandTipPose",
            "leftHandTipPosition",
            "motorReferenceFrame",
            "motorTimescale",
            "motorVelocity",
            "objectName",
            "orientation",
            "position",
            "rightHandPose",
            "rightHandPosition",
            "rightHandTipPose",
            "rightHandTipPosition",
            "scale",
            "sensorToWorldMatrix",
            "sessionDisplayName",
            "sessionUUID",
            "shouldRenderLocally",
            "skeletonModelURL",
            "skeletonOffset",
            "velocity"
        ]
    },
    "OffscreenFlags":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "navigationFocusDisabledChanged()",
            "navigationFocusedChanged()",
            "objectNameChanged(QString)"
        ],
        "vars":[
            "navigationFocusDisabled",
            "navigationFocused",
            "objectName"
        ]
    },
    "OverlayWebWindow":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "OverlayWindow":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "Overlays":{
        "functions":[
            "addOverlay(QString,QVariant)",
            "addPanel(OverlayPanel::Pointer)",
            "addPanel(QVariant)",
            "cloneOverlay(uint)",
            "deleteLater()",
            "deleteOverlay(uint)",
            "deletePanel(uint)",
            "destroyed()",
            "destroyed(QObject*)",
            "editOverlay(uint,QVariant)",
            "editOverlays(QVariant)",
            "editPanel(uint,QVariant)",
            "findRayIntersection(PickRay)",
            "getKeyboardFocusOverlay()",
            "getOverlayAtPoint(glm::vec2)",
            "getOverlayObject(uint)",
            "getOverlayType(uint)",
            "getPanelProperty(uint,QString)",
            "getParentPanel(uint)",
            "getProperty(uint,QString)",
            "height()",
            "hoverEnterOverlay(uint,PointerEvent)",
            "hoverLeaveOverlay(uint,PointerEvent)",
            "hoverOverOverlay(uint,PointerEvent)",
            "isAddedOverlay(uint)",
            "isAddedPanel(uint)",
            "isLoaded(uint)",
            "mouseMoveOnOverlay(uint,PointerEvent)",
            "mousePressOffOverlay()",
            "mousePressOnOverlay(uint,PointerEvent)",
            "mouseReleaseOnOverlay(uint,PointerEvent)",
            "objectNameChanged(QString)",
            "overlayDeleted(uint)",
            "panelDeleted(uint)",
            "sendHoverEnterOverlay(uint,PointerEvent)",
            "sendHoverLeaveOverlay(uint,PointerEvent)",
            "sendHoverOverOverlay(uint,PointerEvent)",
            "sendMouseMoveOnOverlay(uint,PointerEvent)",
            "sendMousePressOnOverlay(uint,PointerEvent)",
            "sendMouseReleaseOnOverlay(uint,PointerEvent)",
            "setKeyboardFocusOverlay(uint)",
            "setParentPanel(uint,uint)",
            "textSize(uint,QString)",
            "width()"
        ],
        "vars":[
            "keyboardFocusOverlay",
            "objectName"
        ]
    },
    "Paths":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)"
        ],
        "vars":[
            "objectName",
            "resources"
        ]
    },
    "Quat":{
        "functions":[
            "angle(glm::quat)",
            "angleAxis(float,glm::vec3)",
            "axis(glm::quat)",
            "conjugate(glm::quat)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "dot(glm::quat,glm::quat)",
            "equal(glm::quat,glm::quat)",
            "fromPitchYawRollDegrees(float,float,float)",
            "fromPitchYawRollRadians(float,float,float)",
            "fromVec3Degrees(glm::vec3)",
            "fromVec3Radians(glm::vec3)",
            "getFront(glm::quat)",
            "getRight(glm::quat)",
            "getUp(glm::quat)",
            "inverse(glm::quat)",
            "lookAt(glm::vec3,glm::vec3,glm::vec3)",
            "lookAtSimple(glm::vec3,glm::vec3)",
            "mix(glm::quat,glm::quat,float)",
            "multiply(glm::quat,glm::quat)",
            "normalize(glm::quat)",
            "objectNameChanged(QString)",
            "print(QString,glm::quat)",
            "rotationBetween(glm::vec3,glm::vec3)",
            "safeEulerAngles(glm::quat)",
            "slerp(glm::quat,glm::quat,float)",
            "squad(glm::quat,glm::quat,glm::quat,glm::quat,float)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Rates":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)"
        ],
        "vars":[
            "avatar",
            "dropped",
            "newFrame",
            "objectName",
            "present",
            "render",
            "simulation"
        ]
    },
    "Recording":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getPlayFromCurrentLocation()",
            "getPlayerUseAttachments()",
            "getPlayerUseDisplayName()",
            "getPlayerUseHeadModel()",
            "getPlayerUseSkeletonModel()",
            "isPaused()",
            "isPlaying()",
            "isRecording()",
            "loadLastRecording()",
            "loadRecording(QString)",
            "objectNameChanged(QString)",
            "pausePlayer()",
            "playerElapsed()",
            "playerLength()",
            "recorderElapsed()",
            "saveRecording(QString)",
            "saveRecordingToAsset(QScriptValue)",
            "setPlayFromCurrentLocation(bool)",
            "setPlayerAudioOffset(float)",
            "setPlayerLoop(bool)",
            "setPlayerTime(float)",
            "setPlayerUseAttachments(bool)",
            "setPlayerUseDisplayName(bool)",
            "setPlayerUseHeadModel(bool)",
            "setPlayerUseSkeletonModel(bool)",
            "setPlayerVolume(float)",
            "startPlaying()",
            "startRecording()",
            "stopPlaying()",
            "stopRecording()"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Render":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getConfig(QString)",
            "load(QJsonObject)",
            "load(QVariantMap)",
            "loaded()",
            "newStats()",
            "objectNameChanged(QString)",
            "refresh()",
            "toJSON()"
        ],
        "vars":[
            "cpuRunTime",
            "objectName"
        ]
    },
    "Resource":{
        "vars":[
            "State"
        ]
    },
    "Resources":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)",
            "overrideUrlPrefix(QString,QString)",
            "restoreUrlPrefix(QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Reticle":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getAllowMouseCapture()",
            "getDepth()",
            "getMaximumPosition()",
            "getPosition()",
            "getVisible()",
            "isMouseCaptured()",
            "isPointingAtSystemOverlay()",
            "objectNameChanged(QString)",
            "setAllowMouseCapture(bool)",
            "setDepth(float)",
            "setPosition(QVariant)",
            "setVisible(bool)"
        ],
        "vars":[
            "allowMouseCapture",
            "depth",
            "maximumPosition",
            "mouseCaptured",
            "objectName",
            "pointingAtSystemOverlay",
            "position",
            "visible"
        ]
    },
    "Scene":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)",
            "shouldRenderAvatarsChanged(bool)",
            "shouldRenderEntitiesChanged(bool)"
        ],
        "vars":[
            "objectName",
            "shouldRenderAvatars",
            "shouldRenderEntities",
            "stage"
        ]
    },
    "Script":{
        "events":[
            "addEventHandler(EntityItemID,QString,QScriptValue)",
            "removeEventHandler(EntityItemID,QString,QScriptValue)"
        ],
        "functions":[
            "callAnimationStateHandler(QScriptValue,AnimVariantMap,QStringList,bool,AnimVariantResultHandler)",
            "callEntityScriptMethod(EntityItemID,QString)",
            "callEntityScriptMethod(EntityItemID,QString,EntityItemID,Collision)",
            "callEntityScriptMethod(EntityItemID,QString,PointerEvent)",
            "callEntityScriptMethod(EntityItemID,QString,QStringList)",
            "cleanupMenuItem(QString)",
            "clearInterval(QObject*)",
            "clearTimeout(QObject*)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "doneRunning()",
            "entityScriptContentAvailable(EntityItemID,QString,QString,bool,bool)",
            "errorLoadingScript(QString)",
            "errorMessage(QString)",
            "evaluate(QString,QString)",
            "evaluate(QString,QString,int)",
            "evaluationFinished(QScriptValue,bool)",
            "finished(QString,ScriptEngine*)",
            "generateUUID()",
            "include(QString)",
            "include(QString,QScriptValue)",
            "include(QStringList)",
            "include(QStringList,QScriptValue)",
            "infoMessage(QString)",
            "load(QString)",
            "loadScript(QString,bool)",
            "objectNameChanged(QString)",
            "print(QString)",
            "printedMessage(QString)",
            "registerFunction(QString,QScriptEngine::FunctionSignature)",
            "registerFunction(QString,QScriptEngine::FunctionSignature,int)",
            "registerFunction(QString,QString,QScriptEngine::FunctionSignature)",
            "registerFunction(QString,QString,QScriptEngine::FunctionSignature,int)",
            "registerGetterSetter(QString,QScriptEngine::FunctionSignature,QScriptEngine::FunctionSignature)",
            "registerGetterSetter(QString,QScriptEngine::FunctionSignature,QScriptEngine::FunctionSignature,QString)",
            "registerGlobalObject(QString,QObject*)",
            "registerValue(QString,QScriptValue)",
            "reloadScript(QString,bool)",
            "requestGarbageCollection()",
            "resolvePath(QString)",
            "resourcesPath()",
            "runningStateChanged()",
            "scriptEnding()",
            "scriptLoaded(QString)",
            "setInterval(QScriptValue,int)",
            "setTimeout(QScriptValue,int)",
            "signalHandlerException(QScriptValue)",
            "stop()",
            "stop(bool)",
            "unloadAllEntityScripts()",
            "unloadEntityScript(EntityItemID)",
            "update(float)",
            "updateMemoryCost(qlonglong)",
            "warningMessage(QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "ScriptDiscoveryService":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "errorLoadingScript(QString,QString)",
            "errorMessage(QString,QString)",
            "getLocal()",
            "getPublic()",
            "getRunning()",
            "infoMessage(QString,QString)",
            "loadOneScript(QString)",
            "loadScript()",
            "loadScript(QUrl)",
            "loadScript(QUrl,bool)",
            "loadScript(QUrl,bool,bool)",
            "loadScript(QUrl,bool,bool,bool)",
            "loadScript(QUrl,bool,bool,bool,bool)",
            "objectNameChanged(QString)",
            "onErrorLoadingScript(QString)",
            "onErrorMessage(QString)",
            "onInfoMessage(QString)",
            "onPrintedMessage(QString)",
            "onScriptFinished(QString,ScriptEngine*)",
            "onWarningMessage(QString)",
            "printedMessage(QString,QString)",
            "reloadAllScripts()",
            "scriptCountChanged()",
            "scriptLoadError(QString,QString)",
            "scriptsReloading()",
            "stopAllScripts()",
            "stopAllScripts(bool)",
            "stopScript(QString)",
            "stopScript(QString,bool)",
            "warningMessage(QString,QString)"
        ],
        "vars":[
            "defaultScriptsPath",
            "objectName",
            "scriptsModel",
            "scriptsModelFilter"
        ]
    },
    "Settings":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getValue(QString)",
            "getValue(QString,QVariant)",
            "objectNameChanged(QString)",
            "setValue(QString,QVariant)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "SoundCache":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "dirty()",
            "getResource(QUrl)",
            "getResource(QUrl,QUrl)",
            "getResource(QUrl,QUrl,void*)",
            "getResourceList()",
            "getSound(QUrl)",
            "objectNameChanged(QString)",
            "prefetch(QUrl)",
            "prefetch(QUrl,void*)",
            "updateTotalSize(qlonglong)"
        ],
        "vars":[
            "numCached",
            "numTotal",
            "objectName",
            "sizeCached",
            "sizeTotal"
        ]
    },
    "SpeechRecognizer":{
        "functions":[
            "addCommand(QString)",
            "commandRecognized(QString)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "enabledUpdated(bool)",
            "objectNameChanged(QString)",
            "removeCommand(QString)",
            "setEnabled(bool)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Stats":{
        "functions":[
            "activeFocusChanged(bool)",
            "activeFocusOnTabChanged(bool)",
            "antialiasingChanged(bool)",
            "appdroppedChanged()",
            "assetMbpsInChanged()",
            "assetMbpsOutChanged()",
            "assetPingChanged()",
            "audioMixerKbpsChanged()",
            "audioMixerPpsChanged()",
            "audioPingChanged()",
            "avatarCountChanged()",
            "avatarMixerInKbpsChanged()",
            "avatarMixerInPpsChanged()",
            "avatarMixerOutKbpsChanged()",
            "avatarMixerOutPpsChanged()",
            "avatarPingChanged()",
            "avatarSimrateChanged()",
            "baselineOffsetChanged(double)",
            "batchFrameTimeChanged()",
            "bgColorChanged()",
            "childAt(double,double)",
            "childrenChanged()",
            "childrenRectChanged(QRectF)",
            "clipChanged(bool)",
            "contains(QPointF)",
            "decimatedTextureCountChanged()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "downloadLimitChanged()",
            "downloadUrlsChanged()",
            "downloadsChanged()",
            "downloadsPendingChanged()",
            "enabledChanged()",
            "entitiesPingChanged()",
            "expandedChanged()",
            "focusChanged(bool)",
            "forceActiveFocus()",
            "forceActiveFocus(Qt::FocusReason)",
            "forceUpdateStats()",
            "framerateChanged()",
            "glContextSwapchainMemoryChanged()",
            "gpuBufferMemoryChanged()",
            "gpuBuffersChanged()",
            "gpuFrameTimeChanged()",
            "gpuFreeMemoryChanged()",
            "gpuSparseTextureEnabledChanged()",
            "gpuTextureFramebufferMemoryChanged()",
            "gpuTextureMemoryChanged()",
            "gpuTextureSparseMemoryChanged()",
            "gpuTextureVirtualMemoryChanged()",
            "gpuTexturesChanged()",
            "gpuTexturesSparseChanged()",
            "grabToImage(QJSValue)",
            "grabToImage(QJSValue,QSize)",
            "heightChanged()",
            "implicitHeightChanged()",
            "implicitWidthChanged()",
            "itemConsideredChanged()",
            "itemOutOfViewChanged()",
            "itemRenderedChanged()",
            "itemTooSmallChanged()",
            "localElementsChanged()",
            "localInternalChanged()",
            "localLeavesChanged()",
            "lodStatusChanged()",
            "mapFromItem(QQmlV4Function*)",
            "mapToItem(QQmlV4Function*)",
            "materialSwitchesChanged()",
            "mbpsInChanged()",
            "mbpsOutChanged()",
            "messagePingChanged()",
            "myAvatarSendRateChanged()",
            "nextItemInFocusChain()",
            "nextItemInFocusChain(bool)",
            "objectNameChanged(QString)",
            "opacityChanged()",
            "packetInCountChanged()",
            "packetOutCountChanged()",
            "packetStatsChanged()",
            "parentChanged(QQuickItem*)",
            "positionChanged()",
            "presentdroprateChanged()",
            "presentnewrateChanged()",
            "presentrateChanged()",
            "qmlTextureMemoryChanged()",
            "quadsChanged()",
            "rectifiedTextureCountChanged()",
            "renderrateChanged()",
            "rotationChanged()",
            "scaleChanged()",
            "sendingModeChanged()",
            "serverCountChanged()",
            "serverElementsChanged()",
            "serverInternalChanged()",
            "serverLeavesChanged()",
            "shadowConsideredChanged()",
            "shadowOutOfViewChanged()",
            "shadowRenderedChanged()",
            "shadowTooSmallChanged()",
            "simrateChanged()",
            "smoothChanged(bool)",
            "speedChanged()",
            "stateChanged(QString)",
            "stutterrateChanged()",
            "timingExpandedChanged()",
            "timingStatsChanged()",
            "transformOriginChanged(TransformOrigin)",
            "trianglesChanged()",
            "update()",
            "visibleChanged()",
            "visibleChildrenChanged()",
            "widthChanged()",
            "windowChanged(QQuickWindow*)",
            "xChanged()",
            "yChanged()",
            "yawChanged()",
            "zChanged()"
        ],
        "vars":[
            "activeFocus",
            "activeFocusOnTab",
            "anchors",
            "antialiasing",
            "appdropped",
            "assetMbpsIn",
            "assetMbpsOut",
            "assetPing",
            "audioMixerKbps",
            "audioMixerPps",
            "audioPing",
            "avatarCount",
            "avatarMixerInKbps",
            "avatarMixerInPps",
            "avatarMixerOutKbps",
            "avatarMixerOutPps",
            "avatarPing",
            "avatarSimrate",
            "baseline",
            "baselineOffset",
            "batchFrameTime",
            "bgColor",
            "bottom",
            "children",
            "childrenRect",
            "clip",
            "data",
            "decimatedTextureCount",
            "downloadLimit",
            "downloadUrls",
            "downloads",
            "downloadsPending",
            "enabled",
            "entitiesPing",
            "expanded",
            "focus",
            "framerate",
            "glContextSwapchainMemory",
            "gpuBufferMemory",
            "gpuBuffers",
            "gpuFrameTime",
            "gpuFreeMemory",
            "gpuSparseTextureEnabled",
            "gpuTextureFramebufferMemory",
            "gpuTextureMemory",
            "gpuTextureSparseMemory",
            "gpuTextureVirtualMemory",
            "gpuTextures",
            "gpuTexturesSparse",
            "height",
            "horizontalCenter",
            "implicitHeight",
            "implicitWidth",
            "itemConsidered",
            "itemOutOfView",
            "itemRendered",
            "itemTooSmall",
            "layer",
            "left",
            "localElements",
            "localInternal",
            "localLeaves",
            "lodStatus",
            "materialSwitches",
            "mbpsIn",
            "mbpsOut",
            "messagePing",
            "monospaceFont",
            "myAvatarSendRate",
            "objectName",
            "opacity",
            "packetInCount",
            "packetOutCount",
            "packetStats",
            "parent",
            "position",
            "presentdroprate",
            "presentnewrate",
            "presentrate",
            "qmlTextureMemory",
            "quads",
            "rectifiedTextureCount",
            "renderrate",
            "resources",
            "right",
            "rotation",
            "scale",
            "sendingMode",
            "serverCount",
            "serverElements",
            "serverInternal",
            "serverLeaves",
            "shadowConsidered",
            "shadowOutOfView",
            "shadowRendered",
            "shadowTooSmall",
            "simrate",
            "smooth",
            "speed",
            "state",
            "states",
            "stutterrate",
            "timingExpanded",
            "timingStats",
            "top",
            "transform",
            "transformOrigin",
            "transformOriginPoint",
            "transitions",
            "triangles",
            "verticalCenter",
            "visible",
            "visibleChildren",
            "width",
            "x",
            "y",
            "yaw",
            "z"
        ]
    },
    "Steam":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "isRunning()",
            "objectNameChanged(QString)",
            "openInviteOverlay()"
        ],
        "vars":[
            "isRunning",
            "objectName"
        ]
    },
    "TREE_SCALE":{

    },
    "TextureCache":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "dirty()",
            "getResource(QUrl)",
            "getResource(QUrl,QUrl)",
            "getResource(QUrl,QUrl,void*)",
            "getResourceList()",
            "objectNameChanged(QString)",
            "prefetch(QUrl)",
            "prefetch(QUrl,int)",
            "prefetch(QUrl,void*)",
            "updateTotalSize(qlonglong)"
        ],
        "vars":[
            "Type",
            "numCached",
            "numTotal",
            "objectName",
            "sizeCached",
            "sizeTotal"
        ]
    },
    "Toolbars":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "getToolbar(QString)",
            "objectNameChanged(QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Uint16Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Uint32Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Uint8Array":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "Uint8ClampedArray":{
        "vars":[
            "BYTES_PER_ELEMENT",
            "__qt_data__",
            "length",
            "name",
            "prototype"
        ]
    },
    "UndoStack":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "objectNameChanged(QString)",
            "pushCommand(QScriptValue,QScriptValue,QScriptValue,QScriptValue)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "UserActivityLogger":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "enabledEdit()",
            "objectNameChanged(QString)",
            "openedMarketplace()",
            "toggledAway(bool)",
            "tutorialProgress(QString,int,float,float)",
            "tutorialProgress(QString,int,float,float,QString)",
            "tutorialProgress(QString,int,float,float,QString,int)",
            "tutorialProgress(QString,int,float,float,QString,int,QString)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Users":{
        "functions":[
            "canKickChanged(bool)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "disableIgnoreRadius()",
            "enableIgnoreRadius()",
            "enteredIgnoreRadius()",
            "getCanKick()",
            "getIgnoreRadiusEnabled()",
            "getIgnoreStatus(QUuid)",
            "getPersonalMuteStatus(QUuid)",
            "ignore(QUuid)",
            "ignore(QUuid,bool)",
            "ignoreRadiusEnabledChanged(bool)",
            "kick(QUuid)",
            "mute(QUuid)",
            "objectNameChanged(QString)",
            "personalMute(QUuid)",
            "personalMute(QUuid,bool)",
            "requestUsernameFromID(QUuid)",
            "toggleIgnoreRadius()",
            "usernameFromIDReply(QString,QString,QString)"
        ],
        "vars":[
            "canKick",
            "objectName",
            "requestsDomainListData"
        ]
    },
    "Uuid":{
        "functions":[
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "fromString(QString)",
            "generate()",
            "isEqual(QUuid,QUuid)",
            "isNull(QUuid)",
            "objectNameChanged(QString)",
            "print(QString,QUuid)",
            "toString(QUuid)"
        ],
        "vars":[
            "objectName"
        ]
    },
    "Vec3":{
        "functions":[
            "cross(glm::vec3,glm::vec3)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "distance(glm::vec3,glm::vec3)",
            "dot(glm::vec3,glm::vec3)",
            "equal(glm::vec3,glm::vec3)",
            "fromPolar(float,float)",
            "fromPolar(glm::vec3)",
            "getAngle(glm::vec3,glm::vec3)",
            "length(glm::vec3)",
            "mix(glm::vec3,glm::vec3,float)",
            "multiply(float,glm::vec3)",
            "multiply(glm::vec3,float)",
            "multiplyQbyV(glm::quat,glm::vec3)",
            "multiplyVbyV(glm::vec3,glm::vec3)",
            "normalize(glm::vec3)",
            "objectNameChanged(QString)",
            "orientedAngle(glm::vec3,glm::vec3,glm::vec3)",
            "print(QString,glm::vec3)",
            "reflect(glm::vec3,glm::vec3)",
            "subtract(glm::vec3,glm::vec3)",
            "sum(glm::vec3,glm::vec3)",
            "toPolar(glm::vec3)",
            "withinEpsilon(glm::vec3,glm::vec3,float)"
        ],
        "vars":[
            "FLOAT_MAX",
            "FLOAT_MIN",
            "FRONT",
            "HALF",
            "ONE",
            "RIGHT",
            "TWO",
            "UNIT_NEG_X",
            "UNIT_NEG_Y",
            "UNIT_NEG_Z",
            "UNIT_X",
            "UNIT_XY",
            "UNIT_XYZ",
            "UNIT_XZ",
            "UNIT_Y",
            "UNIT_YZ",
            "UNIT_Z",
            "UP",
            "ZERO",
            "objectName"
        ]
    },
    "WebSocket":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "Window":{
        "functions":[
            "alert()",
            "alert(QString)",
            "browse()",
            "browse(QString)",
            "browse(QString,QString)",
            "browse(QString,QString,QString)",
            "confirm()",
            "confirm(QString)",
            "copyToClipboard(QString)",
            "customPrompt(QVariant)",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "domainChanged(QString)",
            "domainConnectionRefused(QString,int,QString)",
            "hasFocus()",
            "isPhysicsEnabled()",
            "objectNameChanged(QString)",
            "processingGif()",
            "prompt()",
            "prompt(QString)",
            "prompt(QString,QString)",
            "raiseMainWindow()",
            "save()",
            "save(QString)",
            "save(QString,QString)",
            "save(QString,QString,QString)",
            "setFocus()",
            "shareSnapshot(QString)",
            "shareSnapshot(QString,QUrl)",
            "showAssetServer()",
            "showAssetServer(QString)",
            "snapshotShared(QString)",
            "snapshotTaken(QString,QString,bool)",
            "svoImportRequested(QString)",
            "takeSnapshot()",
            "takeSnapshot(bool)",
            "takeSnapshot(bool,bool)",
            "takeSnapshot(bool,bool,float)"
        ],
        "vars":[
            "innerHeight",
            "innerWidth",
            "location",
            "objectName",
            "x",
            "y"
        ]
    },
    "XMLHttpRequest":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "gc":{
        "vars":[
            "length",
            "name"
        ]
    },
    "location":{
        "functions":[
            "copyAddress()",
            "copyPath()",
            "deleteLater()",
            "destroyed()",
            "destroyed(QObject*)",
            "goBack()",
            "goBackPossible(bool)",
            "goForward()",
            "goForwardPossible(bool)",
            "goToEntry()",
            "goToEntry(LookupTrigger)",
            "goToLocalSandbox()",
            "goToLocalSandbox(QString)",
            "goToLocalSandbox(QString,LookupTrigger)",
            "goToUser(QString)",
            "goToViewpointForPath(QString,QString)",
            "handleLookupString(QString)",
            "handleLookupString(QString,bool)",
            "hostChanged(QString)",
            "locationChangeRequired(glm::vec3,bool,glm::quat,bool)",
            "lookupResultIsNotFound()",
            "lookupResultIsOffline()",
            "lookupResultsFinished()",
            "lookupShareableNameForDomainID(QUuid)",
            "objectNameChanged(QString)",
            "pathChangeRequired(QString)",
            "possibleDomainChangeRequired(QString,ushort,QUuid)",
            "possibleDomainChangeRequiredViaICEForID(QString,QUuid)",
            "protocolVersion()",
            "refreshPreviousLookup()",
            "storeCurrentAddress()"
        ],
        "vars":[
            "domainId",
            "hostname",
            "href",
            "isConnected",
            "metaverseServerUrl",
            "objectName",
            "pathname",
            "placename",
            "protocol"
        ]
    },
    "print":{
        "vars":[
            "length",
            "name",
            "prototype"
        ]
    },
    "version":{
        "vars":[
            "length",
            "name"
        ]
    }
}